name: Build APK for Ahorcado

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential aidl libssl-dev autoconf automake libtool pkg-config
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
          sudo apt-get install -y libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev
          python -m pip install --upgrade pip
          pip install buildozer cython
          
          # Instalar Libtool desde fuente (versión más reciente)
          wget http://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz
          tar -xzf libtool-2.4.7.tar.gz
          cd libtool-2.4.7
          ./configure && make -j$(nproc) && sudo make install

      - name: Download and patch libffi
        run: |
          mkdir -p $HOME/.buildozer/android/packages/libffi
          cd $HOME/.buildozer/android/packages/libffi
          wget https://github.com/libffi/libffi/releases/download/v3.4.6/libffi-3.4.6.tar.gz
          tar -xzf libffi-3.4.6.tar.gz
          
          # Aplicar parches críticos
          cd libffi-3.4.6
          sed -i 's/AC_TRY_COMPILE/AC_COMPILE_IFELSE/g' configure.ac
          sed -i 's/AC_CANONICAL_SYSTEM/AC_CANONICAL_TARGET/g' configure.ac
          echo "m4_pattern_allow([^LT_SYS_SYMBOL_USCORE$])" >> configure.ac
          
          # Copiar macros faltantes de Libtool
          mkdir -p m4
          cp /usr/share/aclocal/lt~obsolete.m4 m4/

      - name: Regenerate build scripts
        run: |
          cd $HOME/.buildozer/android/packages/libffi/libffi-3.4.6
          autoreconf --force --install -I m4
          autoupdate
          autoreconf --force --install -I m4

      - name: Set up NDK environment
        run: |
          export NDK=$HOME/.buildozer/android/platform/android-ndk-r25b
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export TARGET=armv7a-linux-androideabi
          export AR=$TOOLCHAIN/bin/llvm-ar
          export CC=$TOOLCHAIN/bin/${TARGET}${API}-clang
          export CXX=$TOOLCHAIN/bin/${TARGET}${API}-clang++
          echo "CC=$CC" >> $GITHUB_ENV

      - name: Build libffi
        run: |
          cd $HOME/.buildozer/android/packages/libffi/libffi-3.4.6
          ./configure --host=$TARGET --prefix=$NDK/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr
          make -j$(nproc)
          make install

      - name: Configure Buildozer
        run: |
          buildozer init || true
          sed -i 's/^requirements = .*/requirements = python3,kivy==2.2.1,kivymd==2.0.1.dev0,pillow,sdl2_ttf==2.0.15/' buildozer.spec
          echo "android.enable_libffi_from_system = True" >> buildozer.spec
          echo "android.ndk_path = $HOME/.buildozer/android/platform/android-ndk-r25b" >> buildozer.spec

      - name: Build APK
        run: |
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
