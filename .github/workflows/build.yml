name: Build Android APK
on: [push, pull_request]

jobs:
  build-android:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer
          pip install cython==0.29.33

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good

      - name: Install Android build dependencies
        run: |
          sudo apt-get install -y \
            openjdk-11-jdk \
            autoconf \
            automake \
            libtool \
            libffi-dev \
            libssl-dev \
            ccache \
            unzip \
            zip

      - name: Build APK
        run: |
          buildozer android debug
          echo "APK built successfully"
          find . -name "*.apk" -type f

      - name: Create release directory
        run: mkdir -p release

      - name: Copy APK to release directory
        run: |
          find . -name "*.apk" -type f -exec cp {} release/ \;
          ls -la release/

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          APK_PATH=$(find release -name "*.apk" -type f | head -n 1)
          if [ -n "$APK_PATH" ]; then
            gh release create ${GITHUB_REF#refs/tags/} "$APK_PATH" --title "Release ${GITHUB_REF#refs/tags/}" --notes "Automated release"
          else
            echo "No APK found to release"
            exit 1
          fi

      - name: Save APK path for debugging
        run: |
          APK_FILES=$(find . -name "*.apk" -type f)
          echo "Found APK files:"
          echo "$APK_FILES"
          echo "APK_FILES<<EOF" >> $GITHUB_ENV
          echo "$APK_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
